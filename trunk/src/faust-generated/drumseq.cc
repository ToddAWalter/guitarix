// generated from file '../src/faust/drumseq.dsp' by dsp2cc:
// Code generated with Faust (https://faust.grame.fr)


namespace drumseq {


Dsp::Dsp() {
}

Dsp::~Dsp() {
}

inline void Dsp::clear_state_f()
{
	for (int l0 = 0; l0 < 2; l0 = l0 + 1) iVec0[l0] = 0;
	for (int l1 = 0; l1 < 2; l1 = l1 + 1) fRec0[l1] = 0.0;
	for (int l2 = 0; l2 < 2; l2 = l2 + 1) fRec1[l2] = 0.0;
	for (int l3 = 0; l3 < 2; l3 = l3 + 1) iRec4[l3] = 0;
	for (int l4 = 0; l4 < 2; l4 = l4 + 1) fVec1[l4] = 0.0;
	for (int l5 = 0; l5 < 2; l5 = l5 + 1) fRec3[l5] = 0.0;
	for (int l6 = 0; l6 < 3; l6 = l6 + 1) fRec2[l6] = 0.0;
	for (int l7 = 0; l7 < 2; l7 = l7 + 1) fVec2[l7] = 0.0;
	for (int l8 = 0; l8 < 2; l8 = l8 + 1) fRec7[l8] = 0.0;
	for (int l9 = 0; l9 < 2; l9 = l9 + 1) iRec5[l9] = 0;
	for (int l10 = 0; l10 < 2; l10 = l10 + 1) fRec6[l10] = 0.0;
	for (int l11 = 0; l11 < 2; l11 = l11 + 1) fRec9[l11] = 0.0;
	for (int l12 = 0; l12 < 3; l12 = l12 + 1) fRec8[l12] = 0.0;
	for (int l13 = 0; l13 < 2; l13 = l13 + 1) iRec10[l13] = 0;
	for (int l14 = 0; l14 < 2; l14 = l14 + 1) fRec11[l14] = 0.0;
	for (int l15 = 0; l15 < 2; l15 = l15 + 1) fRec12[l15] = 0.0;
	for (int l16 = 0; l16 < 2; l16 = l16 + 1) fRec13[l16] = 0.0;
	for (int l17 = 0; l17 < 2; l17 = l17 + 1) iRec14[l17] = 0;
	for (int l18 = 0; l18 < 2; l18 = l18 + 1) fRec15[l18] = 0.0;
	for (int l19 = 0; l19 < 2; l19 = l19 + 1) fRec16[l19] = 0.0;
	for (int l20 = 0; l20 < 2; l20 = l20 + 1) fRec17[l20] = 0.0;
	for (int l21 = 0; l21 < 2; l21 = l21 + 1) iRec18[l21] = 0;
	for (int l22 = 0; l22 < 2; l22 = l22 + 1) fRec19[l22] = 0.0;
	for (int l23 = 0; l23 < 2; l23 = l23 + 1) fRec20[l23] = 0.0;
	for (int l24 = 0; l24 < 2; l24 = l24 + 1) fVec3[l24] = 0.0;
	for (int l25 = 0; l25 < 2; l25 = l25 + 1) fRec21[l25] = 0.0;
	for (int l26 = 0; l26 < 2; l26 = l26 + 1) fRec26[l26] = 0.0;
	for (int l27 = 0; l27 < 2; l27 = l27 + 1) fVec4[l27] = 0.0;
	for (int l28 = 0; l28 < 64; l28 = l28 + 1) fVec5[l28] = 0.0;
	for (int l29 = 0; l29 < 2; l29 = l29 + 1) fRec27[l29] = 0.0;
	for (int l30 = 0; l30 < 2; l30 = l30 + 1) fRec28[l30] = 0.0;
	for (int l31 = 0; l31 < 2; l31 = l31 + 1) fRec24[l31] = 0.0;
	for (int l32 = 0; l32 < 2; l32 = l32 + 1) fRec25[l32] = 0.0;
	for (int l33 = 0; l33 < 2; l33 = l33 + 1) fRec31[l33] = 0.0;
	for (int l34 = 0; l34 < 2; l34 = l34 + 1) fRec32[l34] = 0.0;
	for (int l35 = 0; l35 < 2; l35 = l35 + 1) fRec29[l35] = 0.0;
	for (int l36 = 0; l36 < 2; l36 = l36 + 1) fRec30[l36] = 0.0;
	for (int l37 = 0; l37 < 2; l37 = l37 + 1) fRec35[l37] = 0.0;
	for (int l38 = 0; l38 < 2; l38 = l38 + 1) fRec36[l38] = 0.0;
	for (int l39 = 0; l39 < 2; l39 = l39 + 1) fRec33[l39] = 0.0;
	for (int l40 = 0; l40 < 2; l40 = l40 + 1) fRec34[l40] = 0.0;
	for (int l41 = 0; l41 < 2; l41 = l41 + 1) fRec39[l41] = 0.0;
	for (int l42 = 0; l42 < 2; l42 = l42 + 1) fRec40[l42] = 0.0;
	for (int l43 = 0; l43 < 2; l43 = l43 + 1) fRec37[l43] = 0.0;
	for (int l44 = 0; l44 < 2; l44 = l44 + 1) fRec38[l44] = 0.0;
	for (int l45 = 0; l45 < 2; l45 = l45 + 1) fVec6[l45] = 0.0;
	for (int l46 = 0; l46 < 2; l46 = l46 + 1) fRec23[l46] = 0.0;
	for (int l47 = 0; l47 < 3; l47 = l47 + 1) fRec22[l47] = 0.0;
	for (int l48 = 0; l48 < 2; l48 = l48 + 1) fRec43[l48] = 0.0;
	for (int l49 = 0; l49 < 2; l49 = l49 + 1) iRec41[l49] = 0;
	for (int l50 = 0; l50 < 2; l50 = l50 + 1) fRec42[l50] = 0.0;
	for (int l51 = 0; l51 < 2; l51 = l51 + 1) fRec45[l51] = 0.0;
	for (int l52 = 0; l52 < 3; l52 = l52 + 1) fRec44[l52] = 0.0;
	for (int l53 = 0; l53 < 2; l53 = l53 + 1) iRec46[l53] = 0;
	for (int l54 = 0; l54 < 2; l54 = l54 + 1) fRec47[l54] = 0.0;
	for (int l55 = 0; l55 < 2; l55 = l55 + 1) fRec48[l55] = 0.0;
	for (int l56 = 0; l56 < 2; l56 = l56 + 1) fVec7[l56] = 0.0;
	for (int l57 = 0; l57 < 2; l57 = l57 + 1) fRec51[l57] = 0.0;
	for (int l58 = 0; l58 < 2; l58 = l58 + 1) iRec49[l58] = 0;
	for (int l59 = 0; l59 < 2; l59 = l59 + 1) fRec50[l59] = 0.0;
	for (int l60 = 0; l60 < 2; l60 = l60 + 1) fRec52[l60] = 0.0;
	for (int l61 = 0; l61 < 2; l61 = l61 + 1) fRec53[l61] = 0.0;
	for (int l62 = 0; l62 < 2; l62 = l62 + 1) fRec54[l62] = 0.0;
	for (int l63 = 0; l63 < 2; l63 = l63 + 1) fRec55[l63] = 0.0;
	for (int l64 = 0; l64 < 2; l64 = l64 + 1) fRec58[l64] = 0.0;
	for (int l65 = 0; l65 < 2; l65 = l65 + 1) fRec59[l65] = 0.0;
	for (int l66 = 0; l66 < 2; l66 = l66 + 1) fRec60[l66] = 0.0;
	for (int l67 = 0; l67 < 2; l67 = l67 + 1) fRec56[l67] = 0.0;
	for (int l68 = 0; l68 < 2; l68 = l68 + 1) fRec57[l68] = 0.0;
	for (int l69 = 0; l69 < 2; l69 = l69 + 1) iRec62[l69] = 0;
	for (int l70 = 0; l70 < 2; l70 = l70 + 1) fRec63[l70] = 0.0;
	for (int l71 = 0; l71 < 2; l71 = l71 + 1) fRec64[l71] = 0.0;
	for (int l72 = 0; l72 < 2; l72 = l72 + 1) fVec8[l72] = 0.0;
	for (int l73 = 0; l73 < 2; l73 = l73 + 1) fRec65[l73] = 0.0;
	for (int l74 = 0; l74 < 2; l74 = l74 + 1) fRec69[l74] = 0.0;
	for (int l75 = 0; l75 < 3; l75 = l75 + 1) fRec68[l75] = 0.0;
	for (int l76 = 0; l76 < 2; l76 = l76 + 1) fVec9[l76] = 0.0;
	for (int l77 = 0; l77 < 2; l77 = l77 + 1) fRec67[l77] = 0.0;
	for (int l78 = 0; l78 < 3; l78 = l78 + 1) fRec66[l78] = 0.0;
	for (int l79 = 0; l79 < 2; l79 = l79 + 1) fRec72[l79] = 0.0;
	for (int l80 = 0; l80 < 2; l80 = l80 + 1) iRec70[l80] = 0;
	for (int l81 = 0; l81 < 2; l81 = l81 + 1) fRec71[l81] = 0.0;
	for (int l82 = 0; l82 < 2; l82 = l82 + 1) fRec77[l82] = 0.0;
	for (int l83 = 0; l83 < 2; l83 = l83 + 1) fRec78[l83] = 0.0;
	for (int l84 = 0; l84 < 2; l84 = l84 + 1) fRec79[l84] = 0.0;
	for (int l85 = 0; l85 < 2; l85 = l85 + 1) fRec75[l85] = 0.0;
	for (int l86 = 0; l86 < 2; l86 = l86 + 1) fRec76[l86] = 0.0;
	for (int l87 = 0; l87 < 2; l87 = l87 + 1) fRec74[l87] = 0.0;
	for (int l88 = 0; l88 < 3; l88 = l88 + 1) fRec73[l88] = 0.0;
	for (int l89 = 0; l89 < 2; l89 = l89 + 1) fRec82[l89] = 0.0;
	for (int l90 = 0; l90 < 2; l90 = l90 + 1) iRec80[l90] = 0;
	for (int l91 = 0; l91 < 2; l91 = l91 + 1) fRec81[l91] = 0.0;
}

inline void Dsp::init(unsigned int sample_rate)
{
	fSampleRate = sample_rate;
	fConst0 = std::min<double>(1.92e+05, std::max<double>(1.0, double(fSampleRate)));
	fConst1 = std::tan(1643.0529578274618 / fConst0);
	fConst2 = mydsp_faustpower2_f(fConst1);
	fConst3 = 2.0 * (1.0 - 1.0 / fConst2);
	fConst4 = 1.0 / fConst1;
	fConst5 = (fConst4 + -1.0000000000000004) / fConst1 + 1.0;
	fConst6 = (fConst4 + 1.0000000000000004) / fConst1 + 1.0;
	fConst7 = 1.0 / fConst6;
	fConst8 = 1.0 - fConst4;
	fConst9 = 4.656612875245797e-10 / fConst1;
	fConst10 = 1.0 / (fConst4 + 1.0);
	fConst11 = 1.0 / double(int(0.0005 * fConst0));
	fConst12 = 1.0 - 1.0 / std::pow(1e+03, 5.46448087431694 / fConst0);
	fConst13 = 1.0 - std::pow(1.0, 1e+03 / fConst0);
	fConst14 = 2e+03 / fConst0;
	fConst15 = 1.0 / (fConst2 * fConst6);
	fConst16 = std::tan(22116.812281272145 / fConst0);
	fConst17 = 2.0 * (1.0 - 1.0 / mydsp_faustpower2_f(fConst16));
	fConst18 = 1.0 / fConst16;
	fConst19 = (fConst18 + -1.0000000000000004) / fConst16 + 1.0;
	fConst20 = 1.0 / ((fConst18 + 1.0000000000000004) / fConst16 + 1.0);
	fConst21 = 1.0 - fConst18;
	fConst22 = 1.0 / (fConst18 + 1.0);
	fConst23 = 1.0 - 1.0 / std::pow(1e+03, 5.0 / fConst0);
	fConst24 = 1162.3892818282234 / fConst0;
	fConst25 = std::cos(fConst24);
	fConst26 = std::sin(fConst24);
	fConst27 = 1.0 - 1.0 / std::pow(1e+03, 13.333333333333334 / fConst0);
	fConst28 = 2073.4511513692632 / fConst0;
	fConst29 = std::cos(fConst28);
	fConst30 = std::sin(fConst28);
	fConst31 = 1.0 - 1.0 / std::pow(1e+03, 18.181818181818183 / fConst0);
	fConst32 = 1.0 / double(int(0.01 * fConst0));
	fConst33 = 3.141592653589793 / fConst0;
	fConst34 = 1.6e+03 / fConst0;
	fConst35 = std::max<double>(0.0, std::min<double>(2047.0, 0.0003125 * fConst0));
	iConst36 = int(fConst35);
	iConst37 = iConst36 + 1;
	fConst38 = std::floor(fConst35);
	fConst39 = fConst35 - fConst38;
	fConst40 = fConst38 + (1.0 - fConst35);
	fConst41 = 4.572399611740729 / fConst0;
	fConst42 = std::cos(fConst41);
	fConst43 = std::sin(fConst41);
	fConst44 = 0.00011370625 * fConst0;
	fConst45 = 6.283185307179586 / fConst0;
	fConst46 = 20.327952464404543 / fConst0;
	fConst47 = std::cos(fConst46);
	fConst48 = std::sin(fConst46);
	fConst49 = 0.000505514705882353 * fConst0;
	fConst50 = 326.7256359733385 / fConst0;
	fConst51 = std::cos(fConst50);
	fConst52 = std::sin(fConst50);
	fConst53 = 0.008125 * fConst0;
	fConst54 = 1498.2980347889782 / fConst0;
	fConst55 = std::cos(fConst54);
	fConst56 = std::sin(fConst54);
	fConst57 = 0.037259615384615384 * fConst0;
	fConst58 = 1.0 / double(int(0.005 * fConst0));
	fConst59 = 1e+02 / fConst0;
	fConst60 = 1.0 - 1.0 / std::pow(1e+03, fConst59);
	fConst61 = 2e+02 / fConst0;
	fConst62 = 1.0 / double(int(0.1 * fConst0));
	fConst63 = 1.0 - 1.0 / std::pow(1e+03, 1e+01 / fConst0);
	fConst64 = 5.026548245743669 / fConst0;
	fConst65 = 5.340707511102648 / fConst0;
	fConst66 = 1.0 / fConst0;
	fConst67 = 1.0 - 1.0 / std::pow(1e+03, 2.5 / fConst0);
	fConst68 = 1.0 / double(int(0.03 * fConst0));
	fConst69 = std::tan(1570.7963267948965 / fConst0);
	fConst70 = mydsp_faustpower2_f(fConst69);
	fConst71 = 2.0 * (1.0 - 1.0 / fConst70);
	fConst72 = 1.0 / fConst69;
	fConst73 = (fConst72 + -1.0000000000000004) / fConst69 + 1.0;
	fConst74 = (fConst72 + 1.0000000000000004) / fConst69 + 1.0;
	fConst75 = 1.0 / fConst74;
	fConst76 = 1.0 - fConst72;
	fConst77 = 1.396983862573739e-11 / fConst69;
	fConst78 = 1.0 / (fConst72 + 1.0);
	fConst79 = 1.0 / (fConst70 * fConst74);
	fConst80 = 1.0 - 1.0 / std::pow(1e+03, fConst66);
	fConst81 = std::tan(3141.592653589793 / fConst0);
	fConst82 = 2.0 * (1.0 - 1.0 / mydsp_faustpower2_f(fConst81));
	fConst83 = 1.0 / fConst81;
	fConst84 = (fConst83 + -1.0000000000000004) / fConst81 + 1.0;
	fConst85 = 1.0 / ((fConst83 + 1.0000000000000004) / fConst81 + 1.0);
	fConst86 = 1.0 / double(int(0.02 * fConst0));
	fConst87 = 31.41592653589793 / fConst0;
	fConst88 = std::cos(fConst87);
	fConst89 = std::sin(fConst87);
	fConst90 = 1.0 - fConst83;
	fConst91 = 1.0 / (fConst83 + 1.0);
	IOTA0 = 0;
	clear_state_f();
}

void always_inline Dsp::compute(int count, FAUSTFLOAT *input0, FAUSTFLOAT *output0)
{
#define fCheckbox0 (*fCheckbox0_)
#define fCheckbox1 (*fCheckbox1_)
#define fCheckbox2 (*fCheckbox2_)
#define fVslider3 (*fVslider3_)
#define fCheckbox3 (*fCheckbox3_)
#define fVslider4 (*fVslider4_)
#define fCheckbox4 (*fCheckbox4_)
	int iSlow0 = int(double(fCheckbox0));
	double fSlow1 = 0.0010000000000000009 * double(fVslider0);
	double fSlow2 = 0.0010000000000000009 * double(fVslider1);
	double fSlow3 = double(fCheckbox1);
	double fSlow4 = 0.0010000000000000009 * double(fVslider2);
	double fSlow5 = double(fCheckbox2);
	double fSlow6 = 0.0010000000000000009 * double(fVslider3);
	double fSlow7 = double(fCheckbox3);
	double fSlow8 = double(fVslider4);
	double fSlow9 = fConst45 * fSlow8;
	double fSlow10 = std::cos(fSlow9);
	double fSlow11 = std::sin(fSlow9);
	double fSlow12 = fConst64 * fSlow8;
	double fSlow13 = std::cos(fSlow12);
	double fSlow14 = std::sin(fSlow12);
	double fSlow15 = fConst65 * fSlow8;
	double fSlow16 = std::cos(fSlow15);
	double fSlow17 = std::sin(fSlow15);
	double fSlow18 = 0.6538461538461537 * fSlow8;
	double fSlow19 = std::max<double>(2.220446049250313e-16, std::fabs(0.9 * fSlow8));
	double fSlow20 = fConst66 * fSlow19;
	double fSlow21 = 1.0 - fConst0 / fSlow19;
	double fSlow22 = 0.0010000000000000009 * double(fVslider5);
	double fSlow23 = double(fCheckbox4);
	for (int i0 = 0; i0 < count; i0 = i0 + 1) {
		iVec0[0] = 1;
		fRec0[0] = fSlow1 + 0.999 * fRec0[1];
		fRec1[0] = fSlow2 + 0.999 * fRec1[1];
		iRec4[0] = 1103515245 * iRec4[1] + 12345;
		double fTemp0 = double(iRec4[0]);
		fVec1[0] = fTemp0;
		double fTemp1 = fTemp0 - fVec1[1];
		fRec3[0] = fConst10 * (fConst9 * fTemp1 - fConst8 * fRec3[1]);
		fRec2[0] = fRec3[0] - fConst7 * (fConst5 * fRec2[2] + fConst3 * fRec2[1]);
		fVec2[0] = fSlow3;
		fRec7[0] = fRec7[1] + double(fSlow3 > fVec2[1]) - fConst11 * double(fRec7[1] > 0.0);
		int iTemp2 = fRec7[0] > 0.0;
		int iTemp3 = iTemp2 > 0;
		iRec5[0] = iTemp3 & (iRec5[1] | (fRec6[1] >= 1.0));
		int iTemp4 = iTemp2 <= 0;
		int iTemp5 = iTemp4 & (fRec6[1] > 0.0);
		fRec6[0] = (fConst14 * double(((iRec5[1] == 0) & iTemp3) & (fRec6[1] < 1.0)) + fRec6[1] * (1.0 - fConst13 * double(iRec5[1] & (fRec6[1] > 1.0)) - fConst12 * double(iTemp5))) * double((iTemp5 == 0) | (fRec6[1] >= 1e-06));
		fRec9[0] = fConst22 * (4.656612875245797e-10 * (fTemp0 + fVec1[1]) - fConst21 * fRec9[1]);
		fRec8[0] = fRec9[0] - fConst20 * (fConst19 * fRec8[2] + fConst17 * fRec8[1]);
		iRec10[0] = iTemp3 & (iRec10[1] | (fRec11[1] >= 1.0));
		int iTemp6 = iTemp4 & (fRec11[1] > 0.0);
		fRec11[0] = (fConst14 * double(((iRec10[1] == 0) & iTemp3) & (fRec11[1] < 1.0)) + fRec11[1] * (1.0 - fConst13 * double(iRec10[1] & (fRec11[1] > 1.0)) - fConst23 * double(iTemp6))) * double((iTemp6 == 0) | (fRec11[1] >= 1e-06));
		fRec12[0] = fConst26 * fRec13[1] + fConst25 * fRec12[1];
		int iTemp7 = 1 - iVec0[1];
		double fTemp8 = double(iTemp7);
		fRec13[0] = fTemp8 + fConst25 * fRec13[1] - fConst26 * fRec12[1];
		iRec14[0] = iTemp3 & (iRec14[1] | (fRec15[1] >= 1.0));
		int iTemp9 = iTemp4 & (fRec15[1] > 0.0);
		fRec15[0] = (fConst14 * double(((iRec14[1] == 0) & iTemp3) & (fRec15[1] < 1.0)) + fRec15[1] * (1.0 - fConst13 * double(iRec14[1] & (fRec15[1] > 1.0)) - fConst27 * double(iTemp9))) * double((iTemp9 == 0) | (fRec15[1] >= 1e-06));
		fRec16[0] = fConst30 * fRec17[1] + fConst29 * fRec16[1];
		fRec17[0] = fTemp8 + fConst29 * fRec17[1] - fConst30 * fRec16[1];
		iRec18[0] = iTemp3 & (iRec18[1] | (fRec19[1] >= 1.0));
		int iTemp10 = iTemp4 & (fRec19[1] > 0.0);
		fRec19[0] = (fConst14 * double(((iRec18[1] == 0) & iTemp3) & (fRec19[1] < 1.0)) + fRec19[1] * (1.0 - fConst13 * double(iRec18[1] & (fRec19[1] > 1.0)) - fConst31 * double(iTemp10))) * double((iTemp10 == 0) | (fRec19[1] >= 1e-06));
		fRec20[0] = fSlow4 + 0.999 * fRec20[1];
		fVec3[0] = fSlow5;
		double fTemp11 = double(fSlow5 > fVec3[1]);
		fRec21[0] = fTemp11 + fRec21[1] - fConst32 * double(fRec21[1] > 0.0);
		double fTemp12 = std::tan(fConst33 * (1.2e+04 - 3e+03 * fRec21[0]));
		double fTemp13 = 1.0 / fTemp12;
		double fTemp14 = (fTemp13 + 1.0000000000000004) / fTemp12 + 1.0;
		double fTemp15 = mydsp_faustpower2_f(fTemp12);
		double fTemp16 = ((iTemp7) ? 0.0 : fConst34 + fRec26[1]);
		fRec26[0] = fTemp16 - std::floor(fTemp16);
		double fTemp17 = mydsp_faustpower2_f(2.0 * fRec26[0] + -1.0);
		fVec4[0] = fTemp17;
		double fTemp18 = double(iVec0[1]) * (fTemp17 - fVec4[1]);
		fVec5[IOTA0 & 63] = fTemp18;
		double fTemp19 = fTemp18 - fConst40 * fVec5[(IOTA0 - iConst36) & 63] - fConst39 * fVec5[(IOTA0 - iConst37) & 63];
		fRec27[0] = fConst43 * fRec28[1] + fConst42 * fRec27[1];
		fRec28[0] = fTemp8 + fConst42 * fRec28[1] - fConst43 * fRec27[1];
		double fTemp20 = fConst45 * (fConst44 * fRec27[0] * fTemp19 + 2094.4);
		double fTemp21 = std::cos(fTemp20);
		double fTemp22 = std::sin(fTemp20);
		fRec24[0] = fRec25[1] * fTemp22 + fRec24[1] * fTemp21;
		fRec25[0] = fTemp8 + fRec25[1] * fTemp21 - fTemp22 * fRec24[1];
		fRec31[0] = fConst48 * fRec32[1] + fConst47 * fRec31[1];
		fRec32[0] = fTemp8 + fConst47 * fRec32[1] - fConst48 * fRec31[1];
		double fTemp23 = fConst45 * (fConst49 * fRec31[0] * fTemp19 + 4944.0);
		double fTemp24 = std::cos(fTemp23);
		double fTemp25 = std::sin(fTemp23);
		fRec29[0] = fRec30[1] * fTemp25 + fRec29[1] * fTemp24;
		fRec30[0] = fTemp8 + fRec30[1] * fTemp24 - fTemp25 * fRec29[1];
		fRec35[0] = fConst52 * fRec36[1] + fConst51 * fRec35[1];
		fRec36[0] = fTemp8 + fConst51 * fRec36[1] - fConst52 * fRec35[1];
		double fTemp26 = fConst45 * (fConst53 * fRec35[0] * fTemp19 + 3847.9999999999995);
		double fTemp27 = std::cos(fTemp26);
		double fTemp28 = std::sin(fTemp26);
		fRec33[0] = fRec34[1] * fTemp28 + fRec33[1] * fTemp27;
		fRec34[0] = fTemp8 + fRec34[1] * fTemp27 - fTemp28 * fRec33[1];
		fRec39[0] = fConst56 * fRec40[1] + fConst55 * fRec39[1];
		fRec40[0] = fTemp8 + fConst55 * fRec40[1] - fConst56 * fRec39[1];
		double fTemp29 = fConst45 * (fConst57 * fRec39[0] * fTemp19 + 2144.0);
		double fTemp30 = std::cos(fTemp29);
		double fTemp31 = std::sin(fTemp29);
		fRec37[0] = fRec38[1] * fTemp31 + fRec37[1] * fTemp30;
		fRec38[0] = fTemp8 + fRec38[1] * fTemp30 - fTemp31 * fRec37[1];
		double fTemp32 = fRec37[0] + fRec33[0] + fRec29[0] + fRec24[0];
		fVec6[0] = fTemp32;
		fRec23[0] = -((fRec23[1] * (1.0 - fTemp13) - (fTemp32 - fVec6[1]) / fTemp12) / (fTemp13 + 1.0));
		fRec22[0] = fRec23[0] - (fRec22[2] * ((fTemp13 + -1.0000000000000004) / fTemp12 + 1.0) + 2.0 * fRec22[1] * (1.0 - 1.0 / fTemp15)) / fTemp14;
		fRec43[0] = fTemp11 + fRec43[1] - fConst58 * double(fRec43[1] > 0.0);
		int iTemp33 = fRec43[0] > 0.0;
		int iTemp34 = iTemp33 > 0;
		iRec41[0] = iTemp34 & (iRec41[1] | (fRec42[1] >= 1.0));
		int iTemp35 = iTemp33 <= 0;
		int iTemp36 = iTemp35 & (fRec42[1] > 0.0);
		fRec42[0] = (fConst61 * double(((iRec41[1] == 0) & iTemp34) & (fRec42[1] < 1.0)) + fRec42[1] * (1.0 - fConst60 * double(iTemp36))) * double((iTemp36 == 0) | (fRec42[1] >= 1e-06));
		fRec45[0] = fRec45[1] + fTemp11 - fConst62 * double(fRec45[1] > 0.0);
		double fTemp37 = 6e+03 * fRec45[0] + 9e+03;
		fRec44[0] = fTemp32 - (fConst45 * fRec44[1] * fTemp37 * std::cos(fConst45 * fTemp37) + fRec44[2] * mydsp_faustpower2_f(-(fConst33 * fTemp37)));
		iRec46[0] = iTemp34 & (iRec46[1] | (fRec47[1] >= 1.0));
		int iTemp38 = iTemp35 & (fRec47[1] > 0.0);
		fRec47[0] = (fConst61 * double(((iRec46[1] == 0) & iTemp34) & (fRec47[1] < 1.0)) + fRec47[1] * (1.0 - fConst63 * double(iTemp38))) * double((iTemp38 == 0) | (fRec47[1] >= 1e-06));
		fRec48[0] = fSlow6 + 0.999 * fRec48[1];
		fVec7[0] = fSlow7;
		fRec51[0] = fRec51[1] + double(fSlow7 > fVec7[1]) - fConst58 * double(fRec51[1] > 0.0);
		int iTemp39 = fRec51[0] > 0.0;
		int iTemp40 = iTemp39 > 0;
		iRec49[0] = iTemp40 & (iRec49[1] | (fRec50[1] >= 1.0));
		int iTemp41 = iTemp39 <= 0;
		int iTemp42 = iTemp41 & (fRec50[1] > 0.0);
		fRec50[0] = (fConst61 * double(((iRec49[1] == 0) & iTemp40) & (fRec50[1] < 1.0)) + fRec50[1] * (1.0 - fConst60 * double(iTemp42))) * double((iTemp42 == 0) | (fRec50[1] >= 1e-06));
		fRec52[0] = fSlow11 * fRec53[1] + fSlow10 * fRec52[1];
		fRec53[0] = fTemp8 + fSlow10 * fRec53[1] - fSlow11 * fRec52[1];
		fRec54[0] = fSlow14 * fRec55[1] + fSlow13 * fRec54[1];
		fRec55[0] = fTemp8 + fSlow13 * fRec55[1] - fSlow14 * fRec54[1];
		fRec58[0] = fSlow17 * fRec59[1] + fSlow16 * fRec58[1];
		fRec59[0] = fTemp8 + fSlow16 * fRec59[1] - fSlow17 * fRec58[1];
		double fTemp43 = fSlow20 + fRec60[1] + -1.0;
		int iTemp44 = fTemp43 < 0.0;
		double fTemp45 = fSlow20 + fRec60[1];
		fRec60[0] = ((iTemp44) ? fTemp45 : fTemp43);
		double fRec61 = ((iTemp44) ? fTemp45 : fSlow20 + fRec60[1] + fSlow21 * fTemp43);
		double fTemp46 = fConst45 * (2.0 * fRec61 + fSlow18 * fRec58[0] + -1.0);
		double fTemp47 = std::cos(fTemp46);
		double fTemp48 = std::sin(fTemp46);
		fRec56[0] = fRec57[1] * fTemp48 + fRec56[1] * fTemp47;
		fRec57[0] = fTemp8 + fRec57[1] * fTemp47 - fTemp48 * fRec56[1];
		iRec62[0] = iTemp40 & (iRec62[1] | (fRec63[1] >= 1.0));
		int iTemp49 = iTemp41 & (fRec63[1] > 0.0);
		fRec63[0] = (fConst61 * double(((iRec62[1] == 0) & iTemp40) & (fRec63[1] < 1.0)) + fRec63[1] * (1.0 - fConst67 * double(iTemp49))) * double((iTemp49 == 0) | (fRec63[1] >= 1e-06));
		fRec64[0] = fSlow22 + 0.999 * fRec64[1];
		fVec8[0] = fSlow23;
		double fTemp50 = double(fSlow23 > fVec8[1]);
		fRec65[0] = fTemp50 + fRec65[1] - fConst68 * double(fRec65[1] > 0.0);
		double fTemp51 = std::tan(fConst33 * (5.5e+03 * fRec65[0] + 5e+02));
		double fTemp52 = 1.0 / fTemp51;
		double fTemp53 = (fTemp52 + 1.0000000000000004) / fTemp51 + 1.0;
		fRec69[0] = fConst78 * (fConst77 * fTemp1 - fConst76 * fRec69[1]);
		fRec68[0] = fRec69[0] - fConst75 * (fConst73 * fRec68[2] + fConst71 * fRec68[1]);
		double fTemp54 = fRec68[2] + (fRec68[0] - 2.0 * fRec68[1]);
		fVec9[0] = fTemp54;
		fRec67[0] = -((fRec67[1] * (1.0 - fTemp52) - fConst79 * (fTemp54 + fVec9[1])) / (fTemp52 + 1.0));
		fRec66[0] = fRec67[0] - (fRec66[2] * ((fTemp52 + -1.0000000000000004) / fTemp51 + 1.0) + 2.0 * fRec66[1] * (1.0 - 1.0 / mydsp_faustpower2_f(fTemp51))) / fTemp53;
		fRec72[0] = fTemp50 + fRec72[1] - fConst32 * double(fRec72[1] > 0.0);
		int iTemp55 = fRec72[0] > 0.0;
		int iTemp56 = iTemp55 > 0;
		iRec70[0] = iTemp56 & (iRec70[1] | (fRec71[1] >= 1.0));
		int iTemp57 = (iTemp55 <= 0) & (fRec71[1] > 0.0);
		fRec71[0] = (fConst59 * double(((iRec70[1] == 0) & iTemp56) & (fRec71[1] < 1.0)) + fRec71[1] * (1.0 - fConst80 * double(iTemp57))) * double((iTemp57 == 0) | (fRec71[1] >= 1e-06));
		fRec77[0] = fRec77[1] + fTemp50 - fConst86 * double(fRec77[1] > 0.0);
		fRec78[0] = fConst89 * fRec79[1] + fConst88 * fRec78[1];
		fRec79[0] = fTemp8 + fConst88 * fRec79[1] - fConst89 * fRec78[1];
		double fTemp58 = fConst45 * (19.23076923076923 * fRec78[0] + 5e+01 * (fRec77[0] + 1.0));
		double fTemp59 = std::cos(fTemp58);
		double fTemp60 = std::sin(fTemp58);
		fRec75[0] = fRec76[1] * fTemp60 + fRec75[1] * fTemp59;
		fRec76[0] = fTemp8 + fRec76[1] * fTemp59 - fTemp60 * fRec75[1];
		fRec74[0] = -(fConst91 * (fConst90 * fRec74[1] - (fRec75[0] + fRec75[1])));
		fRec73[0] = fRec74[0] - fConst85 * (fConst84 * fRec73[2] + fConst82 * fRec73[1]);
		fRec82[0] = fTemp50 + fRec82[1] - fConst58 * double(fRec82[1] > 0.0);
		int iTemp61 = fRec82[0] > 0.0;
		int iTemp62 = iTemp61 > 0;
		iRec80[0] = iTemp62 & (iRec80[1] | (fRec81[1] >= 1.0));
		int iTemp63 = (iTemp61 <= 0) & (fRec81[1] > 0.0);
		fRec81[0] = (fConst61 * double(((iRec80[1] == 0) & iTemp62) & (fRec81[1] < 1.0)) + fRec81[1] * (1.0 - fConst67 * double(iTemp63))) * double((iTemp63 == 0) | (fRec81[1] >= 1e-06));
		double fTemp64 = (2.0 * ((fConst85 * fRec81[0] * (fRec73[2] + fRec73[0] + 2.0 * fRec73[1]) + fRec71[0] * (fRec66[2] + fRec66[0] + 2.0 * fRec66[1]) / fTemp53) * std::pow(1e+01, 0.05 * fRec64[0]) + (0.25 * fRec63[0] * (5.0 * fRec56[0] + 0.5 * (fRec54[0] + fRec52[0])) + 3.0 * fRec50[0]) * std::pow(1e+01, 0.05 * fRec48[0])) + (fRec47[0] * (fRec44[0] - fRec44[2]) + std::sqrt(fRec42[0]) * (fRec22[2] + (fRec22[0] - 2.0 * fRec22[1])) / (fTemp15 * fTemp14)) * std::pow(1e+01, 0.05 * fRec20[0]) + (fRec19[0] * (fRec16[0] + 0.25) + fRec15[0] * (fRec12[0] + 0.25) + 0.2 * (fConst20 * fRec11[0] * (fRec8[2] + fRec8[0] + 2.0 * fRec8[1]) + fConst15 * fRec6[0] * (fRec2[2] + (fRec2[0] - 2.0 * fRec2[1])))) * std::pow(1e+01, 0.05 * fRec1[0])) * std::pow(1e+01, 0.05 * fRec0[0]);
		output0[i0] = FAUSTFLOAT(((iSlow0) ? fTemp64 : double(input0[i0]) + fTemp64));
		iVec0[1] = iVec0[0];
		fRec0[1] = fRec0[0];
		fRec1[1] = fRec1[0];
		iRec4[1] = iRec4[0];
		fVec1[1] = fVec1[0];
		fRec3[1] = fRec3[0];
		fRec2[2] = fRec2[1];
		fRec2[1] = fRec2[0];
		fVec2[1] = fVec2[0];
		fRec7[1] = fRec7[0];
		iRec5[1] = iRec5[0];
		fRec6[1] = fRec6[0];
		fRec9[1] = fRec9[0];
		fRec8[2] = fRec8[1];
		fRec8[1] = fRec8[0];
		iRec10[1] = iRec10[0];
		fRec11[1] = fRec11[0];
		fRec12[1] = fRec12[0];
		fRec13[1] = fRec13[0];
		iRec14[1] = iRec14[0];
		fRec15[1] = fRec15[0];
		fRec16[1] = fRec16[0];
		fRec17[1] = fRec17[0];
		iRec18[1] = iRec18[0];
		fRec19[1] = fRec19[0];
		fRec20[1] = fRec20[0];
		fVec3[1] = fVec3[0];
		fRec21[1] = fRec21[0];
		fRec26[1] = fRec26[0];
		fVec4[1] = fVec4[0];
		IOTA0 = IOTA0 + 1;
		fRec27[1] = fRec27[0];
		fRec28[1] = fRec28[0];
		fRec24[1] = fRec24[0];
		fRec25[1] = fRec25[0];
		fRec31[1] = fRec31[0];
		fRec32[1] = fRec32[0];
		fRec29[1] = fRec29[0];
		fRec30[1] = fRec30[0];
		fRec35[1] = fRec35[0];
		fRec36[1] = fRec36[0];
		fRec33[1] = fRec33[0];
		fRec34[1] = fRec34[0];
		fRec39[1] = fRec39[0];
		fRec40[1] = fRec40[0];
		fRec37[1] = fRec37[0];
		fRec38[1] = fRec38[0];
		fVec6[1] = fVec6[0];
		fRec23[1] = fRec23[0];
		fRec22[2] = fRec22[1];
		fRec22[1] = fRec22[0];
		fRec43[1] = fRec43[0];
		iRec41[1] = iRec41[0];
		fRec42[1] = fRec42[0];
		fRec45[1] = fRec45[0];
		fRec44[2] = fRec44[1];
		fRec44[1] = fRec44[0];
		iRec46[1] = iRec46[0];
		fRec47[1] = fRec47[0];
		fRec48[1] = fRec48[0];
		fVec7[1] = fVec7[0];
		fRec51[1] = fRec51[0];
		iRec49[1] = iRec49[0];
		fRec50[1] = fRec50[0];
		fRec52[1] = fRec52[0];
		fRec53[1] = fRec53[0];
		fRec54[1] = fRec54[0];
		fRec55[1] = fRec55[0];
		fRec58[1] = fRec58[0];
		fRec59[1] = fRec59[0];
		fRec60[1] = fRec60[0];
		fRec56[1] = fRec56[0];
		fRec57[1] = fRec57[0];
		iRec62[1] = iRec62[0];
		fRec63[1] = fRec63[0];
		fRec64[1] = fRec64[0];
		fVec8[1] = fVec8[0];
		fRec65[1] = fRec65[0];
		fRec69[1] = fRec69[0];
		fRec68[2] = fRec68[1];
		fRec68[1] = fRec68[0];
		fVec9[1] = fVec9[0];
		fRec67[1] = fRec67[0];
		fRec66[2] = fRec66[1];
		fRec66[1] = fRec66[0];
		fRec72[1] = fRec72[0];
		iRec70[1] = iRec70[0];
		fRec71[1] = fRec71[0];
		fRec77[1] = fRec77[0];
		fRec78[1] = fRec78[0];
		fRec79[1] = fRec79[0];
		fRec75[1] = fRec75[0];
		fRec76[1] = fRec76[0];
		fRec74[1] = fRec74[0];
		fRec73[2] = fRec73[1];
		fRec73[1] = fRec73[0];
		fRec82[1] = fRec82[0];
		iRec80[1] = iRec80[0];
		fRec81[1] = fRec81[0];
	}
#undef fCheckbox0
#undef fCheckbox1
#undef fCheckbox2
#undef fVslider3
#undef fCheckbox3
#undef fVslider4
#undef fCheckbox4
}

int Dsp::register_par(const ParamReg& reg)
{
	fCheckbox0_ = reg.registerFloatVar("seq.direct_out","","BA",N_("bypass the rack for direct output"),&fCheckbox0, 0.0, 0.0, 1.0, 1.0, 0);
	reg.registerFloatVar("seq.gain","","S",N_("Volume level in decibels"),&fVslider0, -2e+01, -6e+01, 4e+01, 0.1, 0);
	reg.registerFloatVar("seq.hat_closed.dsp.Gain","","S",N_("Volume level in decibels"),&fVslider2, -2e+01, -6e+01, 4e+01, 0.1, 0);
	fCheckbox2_ = reg.registerFloatVar("seq.hat_closed.dsp.gate","","BNA","",&fCheckbox2, 0.0, 0.0, 1.0, 1.0, 0);
	fCheckbox4_ = reg.registerFloatVar("seq.kick.dsp.gate","","BNA","",&fCheckbox4, 0.0, 0.0, 1.0, 1.0, 0);
	reg.registerFloatVar("seq.kick.dsp.Gain","","S",N_("Volume level in decibels"),&fVslider5, -2e+01, -6e+01, 4e+01, 0.1, 0);
	reg.registerFloatVar("seq.snare.dsp.Gain","","S",N_("Volume level in decibels"),&fVslider1, -2e+01, -6e+01, 4e+01, 0.1, 0);
	fCheckbox1_ = reg.registerFloatVar("seq.snare.dsp.gate","","BNA","",&fCheckbox1, 0.0, 0.0, 1.0, 1.0, 0);
	fVslider3_ = reg.registerFloatVar("seq.tom.dsp.Gainf","","SNA","",&fVslider3, -2e+01, -6e+01, 4e+01, 0.1, 0);
	fVslider4_ = reg.registerFloatVar("seq.tom.dsp.freq","","SNA","",&fVslider4, 9e+01, 9e+01, 1.5e+02, 1.0, 0);
	fCheckbox3_ = reg.registerFloatVar("seq.tom.dsp.gate","","BNA","",&fCheckbox3, 0.0, 0.0, 1.0, 1.0, 0);
	return 0;
}


} // end namespace drumseq
